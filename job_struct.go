// Code generated by "mkwinsyscall_struct -struct job"; DO NOT EDIT.

package printer

import "time"

func (p *JOB_INFO_1) GetPrinterName() string {
	return utf16PtrToString(p.pPrinterName)
}
func (p *JOB_INFO_1) GetUserName() string {
	return utf16PtrToString(p.pUserName)
}
func (p *JOB_INFO_1) GetDatatype() string {
	return utf16PtrToString(p.pDatatype)
}
func (p *JOB_INFO_1) GetMachineName() string {
	return utf16PtrToString(p.pMachineName)
}
func (p *JOB_INFO_1) GetDocument() string {
	return utf16PtrToString(p.pDocument)
}
func (p *JOB_INFO_1) GetSubmitted() time.Time {
	return time.Date(
		int(p.Submitted.Year),
		time.Month(int(p.Submitted.Month)),
		int(p.Submitted.Day),
		int(p.Submitted.Hour),
		int(p.Submitted.Minute),
		int(p.Submitted.Second),
		int(1000*p.Submitted.Milliseconds),
		time.Local,
	).UTC()
}
func (p *JOB_INFO_1) GetJob() Job {
	return Job{
		Document:     p.GetDocument(),
		Status:       p.Status,
		Priority:     p.Priority,
		Position:     p.Position,
		PagesPrinted: p.PagesPrinted,
		Submitted:    p.GetSubmitted(),
		JobID:        p.JobID,
		MachineName:  p.GetMachineName(),
		Datatype:     p.GetDatatype(),
		TotalPages:   p.TotalPages,
		PrinterName:  p.GetPrinterName(),
		UserName:     p.GetUserName(),
	}
}
func (p *JOB_INFO_2) GetDocument() string {
	return utf16PtrToString(p.pDocument)
}
func (p *JOB_INFO_2) GetDatatype() string {
	return utf16PtrToString(p.pDatatype)
}
func (p *JOB_INFO_2) GetParameters() string {
	return utf16PtrToString(p.pParameters)
}
func (p *JOB_INFO_2) GetDriverName() string {
	return utf16PtrToString(p.pDriverName)
}
func (p *JOB_INFO_2) GetMachineName() string {
	return utf16PtrToString(p.pMachineName)
}
func (p *JOB_INFO_2) GetSubmitted() time.Time {
	return time.Date(
		int(p.Submitted.Year),
		time.Month(int(p.Submitted.Month)),
		int(p.Submitted.Day),
		int(p.Submitted.Hour),
		int(p.Submitted.Minute),
		int(p.Submitted.Second),
		int(1000*p.Submitted.Milliseconds),
		time.Local,
	).UTC()
}
func (p *JOB_INFO_2) GetNotifyName() string {
	return utf16PtrToString(p.pNotifyName)
}
func (p *JOB_INFO_2) GetPrinterName() string {
	return utf16PtrToString(p.pPrinterName)
}
func (p *JOB_INFO_2) GetPrintProcessor() string {
	return utf16PtrToString(p.pPrintProcessor)
}
func (p *JOB_INFO_2) GetUserName() string {
	return utf16PtrToString(p.pUserName)
}
func (p *JOB_INFO_2) GetJob() Job {
	return Job{
		StartTime:          p.StartTime,
		UntilTime:          p.UntilTime,
		Size:               p.Size,
		PrinterName:        p.GetPrinterName(),
		PrintProcessor:     p.GetPrintProcessor(),
		Time:               p.Time,
		PagesPrinted:       p.PagesPrinted,
		UserName:           p.GetUserName(),
		Priority:           p.Priority,
		Document:           p.GetDocument(),
		Datatype:           p.GetDatatype(),
		Parameters:         p.GetParameters(),
		DriverName:         p.GetDriverName(),
		SecurityDescriptor: p.pSecurityDescriptor,
		Status:             p.Status,
		JobID:              p.JobID,
		MachineName:        p.GetMachineName(),
		Submitted:          p.GetSubmitted(),
		NotifyName:         p.GetNotifyName(),
		Position:           p.Position,
	}
}
func (p *JOB_INFO_3) GetJob() Job {
	return Job{
		JobID:     p.JobID,
		NextJobId: p.NextJobId,
		Reserved:  p.Reserved,
	}
}

type Job struct {
	Status             uint32
	Priority           uint32
	UntilTime          uint32
	Reserved           uint32
	Size               uint32
	NextJobId          uint32
	PrinterName        string
	Parameters         string
	DriverName         string
	NotifyName         string
	StartTime          uint32
	Document           string
	SecurityDescriptor uint32
	PrintProcessor     string
	Datatype           string
	PagesPrinted       uint32
	Submitted          time.Time
	JobID              uint32
	MachineName        string
	Time               uint32
	TotalPages         uint32
	UserName           string
	Position           uint32
}
